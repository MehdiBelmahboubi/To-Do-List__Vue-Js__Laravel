{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '@/stores/auth';\nimport axios from 'axios';\nexport default {\n  __name: 'Login',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const form = ref({\n      email: '',\n      password: ''\n    });\n    const loading = ref(false);\n    const error = ref('');\n    const handleLogin = async () => {\n      try {\n        loading.value = true;\n        error.value = '';\n        const response = await axios.post('/api/auth/login', form.value);\n        authStore.setToken(response.data.token);\n        authStore.setUser(response.data.user);\n        router.push('/tasks');\n      } catch (err) {\n        error.value = err.response?.data?.error || 'Erreur de connexion';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      router,\n      authStore,\n      form,\n      loading,\n      error,\n      handleLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","useAuthStore","axios","router","authStore","form","email","password","loading","error","handleLogin","value","response","post","setToken","data","token","setUser","user","push","err"],"sources":["C:/Project/To-Do List/frontend/src/components/Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <form @submit.prevent=\"handleLogin\" class=\"login-form\">\r\n      <h2>Connexion</h2>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"form.email\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"form.password\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? 'Connexion...' : 'Se connecter' }}\r\n      </button>\r\n      \r\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\nconst authStore = useAuthStore()\r\n\r\nconst form = ref({\r\n  email: '',\r\n  password: ''\r\n})\r\nconst loading = ref(false)\r\nconst error = ref('')\r\n\r\nconst handleLogin = async () => {\r\n  try {\r\n    loading.value = true\r\n    error.value = ''\r\n    \r\n    const response = await axios.post('/api/auth/login', form.value)\r\n    \r\n    authStore.setToken(response.data.token)\r\n    authStore.setUser(response.data.user)\r\n    \r\n    router.push('/tasks')\r\n  } catch (err) {\r\n    error.value = err.response?.data?.error || 'Erreur de connexion'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>"],"mappings":";AAmCA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,SAAS,GAAGH,YAAY,CAAC,CAAC;IAEhC,MAAMI,IAAI,GAAGN,GAAG,CAAC;MACfO,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,OAAO,GAAGT,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMU,KAAK,GAAGV,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACFF,OAAO,CAACG,KAAK,GAAG,IAAI;QACpBF,KAAK,CAACE,KAAK,GAAG,EAAE;QAEhB,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,iBAAiB,EAAER,IAAI,CAACM,KAAK,CAAC;QAEhEP,SAAS,CAACU,QAAQ,CAACF,QAAQ,CAACG,IAAI,CAACC,KAAK,CAAC;QACvCZ,SAAS,CAACa,OAAO,CAACL,QAAQ,CAACG,IAAI,CAACG,IAAI,CAAC;QAErCf,MAAM,CAACgB,IAAI,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZX,KAAK,CAACE,KAAK,GAAGS,GAAG,CAACR,QAAQ,EAAEG,IAAI,EAAEN,KAAK,IAAI,qBAAqB;MAClE,CAAC,SAAS;QACRD,OAAO,CAACG,KAAK,GAAG,KAAK;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}