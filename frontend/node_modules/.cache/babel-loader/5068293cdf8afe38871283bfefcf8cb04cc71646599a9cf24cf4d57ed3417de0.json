{"ast":null,"code":"import { ref, onMounted, onUnmounted } from 'vue';\nimport { useAuthStore } from '@/stores/auth';\nimport echo from '@/config/echo';\nexport default {\n  __name: 'Notifications',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const authStore = useAuthStore();\n    const notifications = ref([]);\n    onMounted(() => {\n      // Écouter les notifications en temps réel\n      echo.private(`tasks.${authStore.user.id}`).listen('TaskCreated', e => {\n        notifications.value.unshift({\n          id: Date.now(),\n          message: e.message,\n          timestamp: new Date(),\n          task: e.task\n        });\n      });\n    });\n    onUnmounted(() => {\n      // Se désabonner des channels\n      echo.leave(`tasks.${authStore.user.id}`);\n    });\n    const formatDate = date => {\n      return new Intl.DateTimeFormat('fr-FR', {\n        hour: '2-digit',\n        minute: '2-digit',\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      }).format(date);\n    };\n    const __returned__ = {\n      authStore,\n      notifications,\n      formatDate,\n      ref,\n      onMounted,\n      onUnmounted,\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get echo() {\n        return echo;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useAuthStore","echo","authStore","notifications","private","user","id","listen","e","value","unshift","Date","now","message","timestamp","task","leave","formatDate","date","Intl","DateTimeFormat","hour","minute","day","month","year","format"],"sources":["C:/Project/To-Do List/frontend/src/components/Notifications.vue"],"sourcesContent":["<template>\r\n  <div class=\"notifications-container\">\r\n    <h2>Notifications</h2>\r\n    \r\n    <div v-if=\"notifications.length === 0\" class=\"empty-state\">\r\n      Aucune notification\r\n    </div>\r\n    \r\n    <div v-else class=\"notifications-list\">\r\n      <div \r\n        v-for=\"notification in notifications\" \r\n        :key=\"notification.id\" \r\n        class=\"notification-item\"\r\n      >\r\n        <div class=\"notification-content\">\r\n          <p>{{ notification.message }}</p>\r\n          <small>{{ formatDate(notification.timestamp) }}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport echo from '@/config/echo'\r\n\r\nconst authStore = useAuthStore()\r\nconst notifications = ref([])\r\n\r\nonMounted(() => {\r\n  // Écouter les notifications en temps réel\r\n  echo.private(`tasks.${authStore.user.id}`)\r\n    .listen('TaskCreated', (e) => {\r\n      notifications.value.unshift({\r\n        id: Date.now(),\r\n        message: e.message,\r\n        timestamp: new Date(),\r\n        task: e.task\r\n      })\r\n    })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // Se désabonner des channels\r\n  echo.leave(`tasks.${authStore.user.id}`)\r\n})\r\n\r\nconst formatDate = (date) => {\r\n  return new Intl.DateTimeFormat('fr-FR', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric'\r\n  }).format(date)\r\n}\r\n</script>"],"mappings":"AAwBA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,IAAI,MAAM,eAAe;;;;;;;IAEhC,MAAMC,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAMG,aAAa,GAAGN,GAAG,CAAC,EAAE,CAAC;IAE7BC,SAAS,CAAC,MAAM;MACd;MACAG,IAAI,CAACG,OAAO,CAAC,SAASF,SAAS,CAACG,IAAI,CAACC,EAAE,EAAE,CAAC,CACvCC,MAAM,CAAC,aAAa,EAAGC,CAAC,IAAK;QAC5BL,aAAa,CAACM,KAAK,CAACC,OAAO,CAAC;UAC1BJ,EAAE,EAAEK,IAAI,CAACC,GAAG,CAAC,CAAC;UACdC,OAAO,EAAEL,CAAC,CAACK,OAAO;UAClBC,SAAS,EAAE,IAAIH,IAAI,CAAC,CAAC;UACrBI,IAAI,EAAEP,CAAC,CAACO;QACV,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFhB,WAAW,CAAC,MAAM;MAChB;MACAE,IAAI,CAACe,KAAK,CAAC,SAASd,SAAS,CAACG,IAAI,CAACC,EAAE,EAAE,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMW,UAAU,GAAIC,IAAI,IAAK;MAC3B,OAAO,IAAIC,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;QACtCC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,MAAM,CAACR,IAAI,CAAC;IACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}