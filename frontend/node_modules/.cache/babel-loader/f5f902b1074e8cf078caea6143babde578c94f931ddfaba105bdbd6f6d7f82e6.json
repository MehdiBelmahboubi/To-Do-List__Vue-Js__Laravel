{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notifications-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"notifications-list\"\n};\nconst _hoisted_4 = {\n  class: \"notification-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", null, \"Notifications\", -1 /* CACHED */)), $setup.notifications.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Aucune notification \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.notifications, notification => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: notification.id,\n      class: \"notification-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"p\", null, _toDisplayString(notification.message), 1 /* TEXT */), _createElementVNode(\"small\", null, _toDisplayString($setup.formatDate(notification.timestamp)), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","$setup","notifications","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","notification","key","id","_hoisted_4","_toDisplayString","message","formatDate","timestamp"],"sources":["C:\\Project\\To-Do List\\frontend\\src\\components\\Notifications.vue"],"sourcesContent":["<template>\r\n  <div class=\"notifications-container\">\r\n    <h2>Notifications</h2>\r\n    \r\n    <div v-if=\"notifications.length === 0\" class=\"empty-state\">\r\n      Aucune notification\r\n    </div>\r\n    \r\n    <div v-else class=\"notifications-list\">\r\n      <div \r\n        v-for=\"notification in notifications\" \r\n        :key=\"notification.id\" \r\n        class=\"notification-item\"\r\n      >\r\n        <div class=\"notification-content\">\r\n          <p>{{ notification.message }}</p>\r\n          <small>{{ formatDate(notification.timestamp) }}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport echo from '@/config/echo'\r\n\r\nconst authStore = useAuthStore()\r\nconst notifications = ref([])\r\n\r\nonMounted(() => {\r\n  // Écouter les notifications en temps réel\r\n  echo.private(`tasks.${authStore.user.id}`)\r\n    .listen('TaskCreated', (e) => {\r\n      notifications.value.unshift({\r\n        id: Date.now(),\r\n        message: e.message,\r\n        timestamp: new Date(),\r\n        task: e.task\r\n      })\r\n    })\r\n})\r\n\r\nonUnmounted(() => {\r\n  // Se désabonner des channels\r\n  echo.leave(`tasks.${authStore.user.id}`)\r\n})\r\n\r\nconst formatDate = (date) => {\r\n  return new Intl.DateTimeFormat('fr-FR', {\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric'\r\n  }).format(date)\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAyB;;;EAGKA,KAAK,EAAC;;;;EAIjCA,KAAK,EAAC;;;EAMTA,KAAK,EAAC;AAAsB;;uBAbvCC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAAsB,YAAlB,eAAa,qBAENC,MAAA,CAAAC,aAAa,CAACC,MAAM,U,cAA/BL,mBAAA,CAEM,OAFNM,UAEM,EAFqD,uBAE3D,M,cAEAN,mBAAA,CAWM,OAXNO,UAWM,I,kBAVJP,mBAAA,CASMQ,SAAA,QAAAC,WAAA,CARmBN,MAAA,CAAAC,aAAa,EAA7BM,YAAY;yBADrBV,mBAAA,CASM;MAPHW,GAAG,EAAED,YAAY,CAACE,EAAE;MACrBb,KAAK,EAAC;QAENG,mBAAA,CAGM,OAHNW,UAGM,GAFJX,mBAAA,CAAiC,WAAAY,gBAAA,CAA3BJ,YAAY,CAACK,OAAO,kBAC1Bb,mBAAA,CAAuD,eAAAY,gBAAA,CAA7CX,MAAA,CAAAa,UAAU,CAACN,YAAY,CAACO,SAAS,kB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}