{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useAuthStore } from '@/stores/auth';\nimport axios from 'axios';\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const authStore = useAuthStore();\n    const form = ref({\n      full_name: '',\n      email: '',\n      phone_number: '',\n      address: '',\n      image: null,\n      password: '',\n      password_confirmation: ''\n    });\n    const loading = ref(false);\n    const error = ref('');\n    const handleImageUpload = event => {\n      form.value.image = event.target.files[0];\n    };\n    const handleRegister = async () => {\n      try {\n        loading.value = true;\n        error.value = '';\n        const formData = new FormData();\n        Object.keys(form.value).forEach(key => {\n          if (form.value[key] !== null) {\n            formData.append(key, form.value[key]);\n          }\n        });\n        const response = await axios.post('/api/auth/register', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        authStore.setToken(response.data.token);\n        authStore.setUser(response.data.user);\n        router.push('/tasks');\n      } catch (err) {\n        error.value = err.response?.data?.message || 'Erreur d\\'inscription';\n      } finally {\n        loading.value = false;\n      }\n    };\n    const __returned__ = {\n      router,\n      authStore,\n      form,\n      loading,\n      error,\n      handleImageUpload,\n      handleRegister,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get useAuthStore() {\n        return useAuthStore;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","useAuthStore","axios","router","authStore","form","full_name","email","phone_number","address","image","password","password_confirmation","loading","error","handleImageUpload","event","value","target","files","handleRegister","formData","FormData","Object","keys","forEach","key","append","response","post","headers","setToken","data","token","setUser","user","push","err","message"],"sources":["C:/Project/To-Do List/frontend/src/components/Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"register-container\">\r\n    <form @submit.prevent=\"handleRegister\" class=\"register-form\" enctype=\"multipart/form-data\">\r\n      <h2>Inscription</h2>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"fullName\">Nom complet</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"fullName\"\r\n          v-model=\"form.full_name\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          v-model=\"form.email\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"phone\">Téléphone</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          v-model=\"form.phone_number\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"address\">Adresse</label>\r\n        <textarea\r\n          id=\"address\"\r\n          v-model=\"form.address\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"image\">Photo de profil</label>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          @change=\"handleImageUpload\"\r\n          accept=\"image/*\"\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Mot de passe</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          v-model=\"form.password\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"passwordConfirmation\">Confirmation du mot de passe</label>\r\n        <input\r\n          type=\"password\"\r\n          id=\"passwordConfirmation\"\r\n          v-model=\"form.password_confirmation\"\r\n          required\r\n        >\r\n      </div>\r\n      \r\n      <button type=\"submit\" :disabled=\"loading\">\r\n        {{ loading ? 'Inscription...' : 'S\\'inscrire' }}\r\n      </button>\r\n      \r\n      <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { useAuthStore } from '@/stores/auth'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\nconst authStore = useAuthStore()\r\n\r\nconst form = ref({\r\n  full_name: '',\r\n  email: '',\r\n  phone_number: '',\r\n  address: '',\r\n  image: null,\r\n  password: '',\r\n  password_confirmation: ''\r\n})\r\nconst loading = ref(false)\r\nconst error = ref('')\r\n\r\nconst handleImageUpload = (event) => {\r\n  form.value.image = event.target.files[0]\r\n}\r\n\r\nconst handleRegister = async () => {\r\n  try {\r\n    loading.value = true\r\n    error.value = ''\r\n    \r\n    const formData = new FormData()\r\n    Object.keys(form.value).forEach(key => {\r\n      if (form.value[key] !== null) {\r\n        formData.append(key, form.value[key])\r\n      }\r\n    })\r\n    \r\n    const response = await axios.post('/api/auth/register', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    })\r\n    \r\n    authStore.setToken(response.data.token)\r\n    authStore.setUser(response.data.user)\r\n    \r\n    router.push('/tasks')\r\n  } catch (err) {\r\n    error.value = err.response?.data?.message || 'Erreur d\\'inscription'\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n</script>"],"mappings":";;;AAoFA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,YAAY,QAAQ,eAAe;AAC5C,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,SAAS,GAAGH,YAAY,CAAC,CAAC;IAEhC,MAAMI,IAAI,GAAGN,GAAG,CAAC;MACfO,SAAS,EAAE,EAAE;MACbC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE,EAAE;MAChBC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,EAAE;MACZC,qBAAqB,EAAE;IACzB,CAAC,CAAC;IACF,MAAMC,OAAO,GAAGd,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMe,KAAK,GAAGf,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMgB,iBAAiB,GAAIC,KAAK,IAAK;MACnCX,IAAI,CAACY,KAAK,CAACP,KAAK,GAAGM,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFP,OAAO,CAACI,KAAK,GAAG,IAAI;QACpBH,KAAK,CAACG,KAAK,GAAG,EAAE;QAEhB,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BC,MAAM,CAACC,IAAI,CAACnB,IAAI,CAACY,KAAK,CAAC,CAACQ,OAAO,CAACC,GAAG,IAAI;UACrC,IAAIrB,IAAI,CAACY,KAAK,CAACS,GAAG,CAAC,KAAK,IAAI,EAAE;YAC5BL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAErB,IAAI,CAACY,KAAK,CAACS,GAAG,CAAC,CAAC;UACvC;QACF,CAAC,CAAC;QAEF,MAAME,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,oBAAoB,EAAER,QAAQ,EAAE;UAChES,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QAEF1B,SAAS,CAAC2B,QAAQ,CAACH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;QACvC7B,SAAS,CAAC8B,OAAO,CAACN,QAAQ,CAACI,IAAI,CAACG,IAAI,CAAC;QAErChC,MAAM,CAACiC,IAAI,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZvB,KAAK,CAACG,KAAK,GAAGoB,GAAG,CAACT,QAAQ,EAAEI,IAAI,EAAEM,OAAO,IAAI,uBAAuB;MACtE,CAAC,SAAS;QACRzB,OAAO,CAACI,KAAK,GAAG,KAAK;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}